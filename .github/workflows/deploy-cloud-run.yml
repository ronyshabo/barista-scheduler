name: Deploy to Cloud Run

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'barista-pay/**'
      - '.github/workflows/deploy-cloud-run.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      SERVICE_NAME: barista-pay
      REGION: us-central1
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      CALENDAR_ID: ${{ secrets.CALENDAR_ID }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      TZ: America/Chicago
      OPEN_TIME: '08:00'
      SWITCH_TIME: '14:00'
      CLOSE_TIME: '21:00'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build and push image
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker build -t "$IMAGE" -f barista-pay/Dockerfile .
          docker push "$IMAGE"
        
      - name: Deploy to Cloud Run
        run: |
          IMAGE="us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars CALENDAR_ID=${{ env.CALENDAR_ID }},SECRET_KEY=${{ env.SECRET_KEY }},TZ=${{ env.TZ }},OPEN_TIME=${{ env.OPEN_TIME }},SWITCH_TIME=${{ env.SWITCH_TIME }},CLOSE_TIME=${{ env.CLOSE_TIME }}

      - name: Output service URL
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)'
